{"version":3,"file":"C:\\Users\\Admin\\Desktop\\cnth\\src\\components\\PokemonCard.tsx","sources":["C:\\Users\\Admin\\Desktop\\cnth\\src\\components\\PokemonCard.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAAyC;AACzC,6CAAmE;AACnE,0CAAsC;AACtC,kDAA4B;AAa5B;IAAyC,+BAAY;IAArD;;IAyCA,CAAC;IAxCG,4BAAM,GAAN;QACU,IAAA,KAAuB,IAAI,CAAC,KAAK,EAA/B,IAAI,UAAA,EAAE,UAAU,gBAAe,CAAC;QAExC,OAAO,CACH,wBAAC,+BAAgB,aAEb,KAAK,EAAE,CAAC,kBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,kBAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EACzD,OAAO,EAAE,cAAM,OAAA,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAnC,CAAmC,iBAElD,uBAAC,eAAK,IAAC,MAAM,EAAE,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,KAAI,CAAC,GAAI,EAEnC,wBAAC,mBAAI,aAAC,KAAK,EAAE,kBAAM,CAAC,IAAI,CAAC,WAAW,iBAChC,uBAAC,oBAAK,IACF,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,EAC3B,KAAK,EAAE,kBAAM,CAAC,SAAS,CAAC,SAAS,GACnC,EAEF,uBAAC,mBAAI,aACD,KAAK,EAAE;gCACH,kBAAM,CAAC,IAAI,CAAC,mBAAmB;gCAC/B,kBAAM,CAAC,SAAS,CAAC,QAAQ;6BAC5B,gBAEA,IAAI,CAAC,IAAI,IACP,EAEP,uBAAC,mBAAI,aAAC,KAAK,EAAE,kBAAM,CAAC,IAAI,CAAC,OAAO,gBAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAc,IAAK,OAAA,CACtC,uBAAC,oBAAK,IACF,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,EAC3B,KAAK,EAAE,kBAAM,CAAC,SAAS,CAAC,SAAS,EAEjC,UAAU,EAAC,SAAS,IADf,KAAK,CAEZ,CACL,EAPyC,CAOzC,CAAC,IACC,KACJ,MA/BF,IAAI,CAAC,KAAK,CAgCA,CACtB,CAAC;IACN,CAAC;IACL,kBAAC;AAAD,CAAC,AAzCD,CAAyC,iBAAS,GAyCjD","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\r\nimport { Styles } from '../constants';\r\nimport Badge from './Badge';\r\nimport { NavigationProp, ParamListBase } from '@react-navigation/native';\r\n\r\ninterface S {\r\n    item: {\r\n        name: string;\r\n        order: number;\r\n        types: Array<{ image: string }>;\r\n        image: string;\r\n    };\r\n    navigation: NavigationProp<ParamListBase>;\r\n}\r\n\r\nexport default class PokemonCard extends Component<S> {\r\n    render() {\r\n        const { item, navigation } = this.props;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                key={item.order}\r\n                style={[Styles.CardStyle.button, Styles.Main.roundBorder]}\r\n                onPress={() => navigation.navigate('Second', item)}\r\n            >\r\n                <Badge number={item?.order || 0} />\r\n\r\n                <View style={Styles.Main.alignCenter}>\r\n                    <Image\r\n                        source={{ uri: item.image }}\r\n                        style={Styles.CardStyle.imageCard}\r\n                    />\r\n\r\n                    <Text\r\n                        style={[\r\n                            Styles.Main.textWhiteCapitalize,\r\n                            Styles.CardStyle.textName,\r\n                        ]}\r\n                    >\r\n                        {item.name}\r\n                    </Text>\r\n\r\n                    <View style={Styles.Main.flexRow}>\r\n                        {item.types.map((type, index : number) => (\r\n                            <Image\r\n                                source={{ uri: type.image }}\r\n                                style={Styles.CardStyle.imageType}\r\n                                key={index}\r\n                                resizeMode=\"contain\"\r\n                            />\r\n                        ))}\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n"]}