e60063e8b1c03f8211f50993d5320438
"use strict";

exports.__esModule = true;
exports.default = void 0;
var _ReactNativePropRegistry = _interopRequireDefault(require("./ReactNativePropRegistry"));
var _invariant = _interopRequireDefault(require("fbjs/lib/invariant"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function getStyle(style) {
  if (typeof style === 'number') {
    return _ReactNativePropRegistry.default.getByID(style);
  }
  return style;
}
function flattenStyle(style) {
  if (!style) {
    return undefined;
  }
  if (process.env.NODE_ENV !== 'production') {
    (0, _invariant.default)(style !== true, 'style may be false but not true');
  }
  if (!Array.isArray(style)) {
    return getStyle(style);
  }
  var result = {};
  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
    var computedStyle = flattenStyle(style[i]);
    if (computedStyle) {
      for (var key in computedStyle) {
        var value = computedStyle[key];
        result[key] = value;
      }
    }
  }
  return result;
}
var _default = flattenStyle;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfUmVhY3ROYXRpdmVQcm9wUmVnaXN0cnkiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9pbnZhcmlhbnQiLCJvYmoiLCJnZXRTdHlsZSIsInN0eWxlIiwiZ2V0QnlJRCIsImZsYXR0ZW5TdHlsZSIsInVuZGVmaW5lZCIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIkFycmF5IiwiaXNBcnJheSIsInJlc3VsdCIsImkiLCJzdHlsZUxlbmd0aCIsImxlbmd0aCIsImNvbXB1dGVkU3R5bGUiLCJrZXkiLCJ2YWx1ZSIsIl9kZWZhdWx0IiwibW9kdWxlIl0sInNvdXJjZXMiOlsiZmxhdHRlblN0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX1JlYWN0TmF0aXZlUHJvcFJlZ2lzdHJ5ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9SZWFjdE5hdGl2ZVByb3BSZWdpc3RyeVwiKSk7XG5cbnZhciBfaW52YXJpYW50ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE5pY29sYXMgR2FsbGFnaGVyLlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cbmZ1bmN0aW9uIGdldFN0eWxlKHN0eWxlKSB7XG4gIGlmICh0eXBlb2Ygc3R5bGUgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIF9SZWFjdE5hdGl2ZVByb3BSZWdpc3RyeS5kZWZhdWx0LmdldEJ5SUQoc3R5bGUpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBmbGF0dGVuU3R5bGUoc3R5bGUpIHtcbiAgaWYgKCFzdHlsZSkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICgwLCBfaW52YXJpYW50LmRlZmF1bHQpKHN0eWxlICE9PSB0cnVlLCAnc3R5bGUgbWF5IGJlIGZhbHNlIGJ1dCBub3QgdHJ1ZScpO1xuICB9XG5cbiAgaWYgKCFBcnJheS5pc0FycmF5KHN0eWxlKSkge1xuICAgIHJldHVybiBnZXRTdHlsZShzdHlsZSk7XG4gIH1cblxuICB2YXIgcmVzdWx0ID0ge307XG5cbiAgZm9yICh2YXIgaSA9IDAsIHN0eWxlTGVuZ3RoID0gc3R5bGUubGVuZ3RoOyBpIDwgc3R5bGVMZW5ndGg7ICsraSkge1xuICAgIHZhciBjb21wdXRlZFN0eWxlID0gZmxhdHRlblN0eWxlKHN0eWxlW2ldKTtcblxuICAgIGlmIChjb21wdXRlZFN0eWxlKSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gY29tcHV0ZWRTdHlsZSkge1xuICAgICAgICB2YXIgdmFsdWUgPSBjb21wdXRlZFN0eWxlW2tleV07XG4gICAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxudmFyIF9kZWZhdWx0ID0gZmxhdHRlblN0eWxlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVpBLE9BQU8sQ0FBQ0MsVUFBVSxHQUFHLElBQUk7QUFDekJELE9BQU8sQ0FBQ0UsT0FBTyxHQUFHLEtBQUssQ0FBQztBQUV4QixJQUFJQyx3QkFBd0IsR0FBR0Msc0JBQXNCLENBQUNDLE9BQU8sNEJBQTRCLENBQUMsQ0FBQztBQUUzRixJQUFJQyxVQUFVLEdBQUdGLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUV0RSxTQUFTRCxzQkFBc0JBLENBQUNHLEdBQUcsRUFBRTtFQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDTixVQUFVLEdBQUdNLEdBQUcsR0FBRztJQUFFTCxPQUFPLEVBQUVLO0VBQUksQ0FBQztBQUFFO0FBVzlGLFNBQVNDLFFBQVFBLENBQUNDLEtBQUssRUFBRTtFQUN2QixJQUFJLE9BQU9BLEtBQUssS0FBSyxRQUFRLEVBQUU7SUFDN0IsT0FBT04sd0JBQXdCLENBQUNELE9BQU8sQ0FBQ1EsT0FBTyxDQUFDRCxLQUFLLENBQUM7RUFDeEQ7RUFFQSxPQUFPQSxLQUFLO0FBQ2Q7QUFFQSxTQUFTRSxZQUFZQSxDQUFDRixLQUFLLEVBQUU7RUFDM0IsSUFBSSxDQUFDQSxLQUFLLEVBQUU7SUFDVixPQUFPRyxTQUFTO0VBQ2xCO0VBRUEsSUFBSUMsT0FBTyxDQUFDQyxHQUFHLENBQUNDLFFBQVEsS0FBSyxZQUFZLEVBQUU7SUFDekMsQ0FBQyxDQUFDLEVBQUVULFVBQVUsQ0FBQ0osT0FBTyxFQUFFTyxLQUFLLEtBQUssSUFBSSxFQUFFLGlDQUFpQyxDQUFDO0VBQzVFO0VBRUEsSUFBSSxDQUFDTyxLQUFLLENBQUNDLE9BQU8sQ0FBQ1IsS0FBSyxDQUFDLEVBQUU7SUFDekIsT0FBT0QsUUFBUSxDQUFDQyxLQUFLLENBQUM7RUFDeEI7RUFFQSxJQUFJUyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0VBRWYsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQyxXQUFXLEdBQUdYLEtBQUssQ0FBQ1ksTUFBTSxFQUFFRixDQUFDLEdBQUdDLFdBQVcsRUFBRSxFQUFFRCxDQUFDLEVBQUU7SUFDaEUsSUFBSUcsYUFBYSxHQUFHWCxZQUFZLENBQUNGLEtBQUssQ0FBQ1UsQ0FBQyxDQUFDLENBQUM7SUFFMUMsSUFBSUcsYUFBYSxFQUFFO01BQ2pCLEtBQUssSUFBSUMsR0FBRyxJQUFJRCxhQUFhLEVBQUU7UUFDN0IsSUFBSUUsS0FBSyxHQUFHRixhQUFhLENBQUNDLEdBQUcsQ0FBQztRQUM5QkwsTUFBTSxDQUFDSyxHQUFHLENBQUMsR0FBR0MsS0FBSztNQUNyQjtJQUNGO0VBQ0Y7RUFFQSxPQUFPTixNQUFNO0FBQ2Y7QUFFQSxJQUFJTyxRQUFRLEdBQUdkLFlBQVk7QUFDM0JYLE9BQU8sQ0FBQ0UsT0FBTyxHQUFHdUIsUUFBUTtBQUMxQkMsTUFBTSxDQUFDMUIsT0FBTyxHQUFHQSxPQUFPLENBQUNFLE9BQU8iLCJpZ25vcmVMaXN0IjpbXX0=