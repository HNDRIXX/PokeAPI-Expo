{"version":3,"names":["exports","__esModule","default","_unitlessNumbers","_interopRequireDefault","require","obj","dangerousStyleValue","name","value","isCustomProperty","isEmpty","hasOwnProperty","trim","_default","module"],"sources":["dangerousStyleValue.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _unitlessNumbers = _interopRequireDefault(require(\"../unitlessNumbers\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * From React 16.0.0\n * \n */\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n\n  if (isEmpty) {\n    return '';\n  }\n\n  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(_unitlessNumbers.default.hasOwnProperty(name) && _unitlessNumbers.default[name])) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return ('' + value).trim();\n}\n\nvar _default = dangerousStyleValue;\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,gBAAgB,GAAGC,sBAAsB,CAACC,OAAO,qBAAqB,CAAC,CAAC;AAE5E,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACL,UAAU,GAAGK,GAAG,GAAG;IAAEJ,OAAO,EAAEI;EAAI,CAAC;AAAE;AAuB9F,SAASC,mBAAmBA,CAACC,IAAI,EAAEC,KAAK,EAAEC,gBAAgB,EAAE;EAU1D,IAAIC,OAAO,GAAGF,KAAK,IAAI,IAAI,IAAI,OAAOA,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,EAAE;EAEzE,IAAIE,OAAO,EAAE;IACX,OAAO,EAAE;EACX;EAEA,IAAI,CAACD,gBAAgB,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,CAAC,IAAI,EAAEN,gBAAgB,CAACD,OAAO,CAACU,cAAc,CAACJ,IAAI,CAAC,IAAIL,gBAAgB,CAACD,OAAO,CAACM,IAAI,CAAC,CAAC,EAAE;IACvJ,OAAOC,KAAK,GAAG,IAAI;EACrB;EAEA,OAAO,CAAC,EAAE,GAAGA,KAAK,EAAEI,IAAI,CAAC,CAAC;AAC5B;AAEA,IAAIC,QAAQ,GAAGP,mBAAmB;AAClCP,OAAO,CAACE,OAAO,GAAGY,QAAQ;AAC1BC,MAAM,CAACf,OAAO,GAAGA,OAAO,CAACE,OAAO","ignoreList":[]}