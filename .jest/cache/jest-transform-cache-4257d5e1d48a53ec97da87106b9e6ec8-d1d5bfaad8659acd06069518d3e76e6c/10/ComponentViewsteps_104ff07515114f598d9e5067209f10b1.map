{"version":3,"file":"C:\\Users\\Admin\\Desktop\\cnth\\src\\pages\\BoilerplatePages\\__tests__\\step-definitions\\ComponentView.steps.tsx","sources":["C:\\Users\\Admin\\Desktop\\cnth\\src\\pages\\BoilerplatePages\\__tests__\\step-definitions\\ComponentView.steps.tsx"],"names":[],"mappings":"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","sourcesContent":["import { defineFeature, loadFeature } from 'jest-cucumber';\r\nimport React from 'react';\r\nimport { shallow } from 'enzyme';\r\nimport HomePage from '../../ComponentView';\r\nimport { Note, PokemonCard } from '../../../../components';\r\n\r\nconst feature = loadFeature('./src/pages/BoilerplatePages/__tests__/features/ComponentView.feature');\r\n\r\ndefineFeature(feature, test => {\r\n  let wrapper: any;\r\n\r\n  test('Display data and search results', ({ given, when, then }) => {\r\n    given('the HomePage is rendered', () => {\r\n      wrapper = shallow(<HomePage navigation={{}} />);\r\n    });\r\n\r\n    when('the data is loaded', async () => {\r\n      wrapper.setState({\r\n        data: [{ name: 'pikachu', order: 1, types: [], image: '' }],\r\n        filteredData: [{ name: 'pikachu', order: 1, types: [], image: '' }]\r\n      });\r\n      wrapper.instance().fetchData = jest.fn(); // Mock fetchData to avoid API calls\r\n      await wrapper.instance().componentDidMount();\r\n      wrapper.update();\r\n    });\r\n\r\n    when('the search term is {string}', (searchTerm) => {\r\n      (wrapper.instance() as HomePage).handleSearch(searchTerm); // Explicitly cast to HomePage\r\n      wrapper.update();\r\n    });\r\n\r\n    then('the list should display {string} related items', (searchTerm) => {\r\n      const pokemonCards = wrapper.find(PokemonCard);\r\n      expect(pokemonCards.someWhere((card: any) => card.props().item.name === searchTerm)).toBe(true);\r\n    });\r\n  });\r\n\r\n  test('Handle error state', ({ given, when, then }) => {\r\n    given('the HomePage is rendered', () => {\r\n      wrapper = shallow(<HomePage navigation={{}} />);\r\n    });\r\n\r\n    when('there is an error while fetching data', async () => {\r\n      wrapper.setState({ error: 'Failed to fetch data' });\r\n      await wrapper.update();\r\n    });\r\n\r\n    then('an error message should be displayed', () => {\r\n      const note = wrapper.find(Note);\r\n      expect(note.exists()).toBe(true);\r\n      expect(note.props().text).toBe('No data found');\r\n    });\r\n  });\r\n});\r\n"]}