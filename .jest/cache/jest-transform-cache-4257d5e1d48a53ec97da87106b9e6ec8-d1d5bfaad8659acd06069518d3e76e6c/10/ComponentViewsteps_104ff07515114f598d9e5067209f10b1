646ecfd040b6482ee7bc6ac87bea07a0
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var jest_cucumber_1 = require("jest-cucumber");
var enzyme_1 = require("enzyme");
var ComponentView_1 = __importDefault(require("../../ComponentView"));
var components_1 = require("../../../../components");
var feature = (0, jest_cucumber_1.loadFeature)('./src/pages/BoilerplatePages/__tests__/features/ComponentView.feature');
(0, jest_cucumber_1.defineFeature)(feature, function (test) {
    var wrapper;
    test('Display data and search results', function (_a) {
        var given = _a.given, when = _a.when, then = _a.then;
        given('the HomePage is rendered', function () {
            wrapper = (0, enzyme_1.shallow)((0, jsx_runtime_1.jsx)(ComponentView_1.default, { navigation: {} }));
        });
        when('the data is loaded', function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        wrapper.setState({
                            data: [{ name: 'pikachu', order: 1, types: [], image: '' }],
                            filteredData: [{ name: 'pikachu', order: 1, types: [], image: '' }]
                        });
                        wrapper.instance().fetchData = jest.fn(); // Mock fetchData to avoid API calls
                        return [4 /*yield*/, wrapper.instance().componentDidMount()];
                    case 1:
                        _a.sent();
                        wrapper.update();
                        return [2 /*return*/];
                }
            });
        }); });
        when('the search term is {string}', function (searchTerm) {
            wrapper.instance().handleSearch(searchTerm); // Explicitly cast to HomePage
            wrapper.update();
        });
        then('the list should display {string} related items', function (searchTerm) {
            var pokemonCards = wrapper.find(components_1.PokemonCard);
            expect(pokemonCards.someWhere(function (card) { return card.props().item.name === searchTerm; })).toBe(true);
        });
    });
    test('Handle error state', function (_a) {
        var given = _a.given, when = _a.when, then = _a.then;
        given('the HomePage is rendered', function () {
            wrapper = (0, enzyme_1.shallow)((0, jsx_runtime_1.jsx)(ComponentView_1.default, { navigation: {} }));
        });
        when('there is an error while fetching data', function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        wrapper.setState({ error: 'Failed to fetch data' });
                        return [4 /*yield*/, wrapper.update()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        then('an error message should be displayed', function () {
            var note = wrapper.find(components_1.Note);
            expect(note.exists()).toBe(true);
            expect(note.props().text).toBe('No data found');
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxBZG1pblxcRGVza3RvcFxcY250aFxcc3JjXFxwYWdlc1xcQm9pbGVycGxhdGVQYWdlc1xcX190ZXN0c19fXFxzdGVwLWRlZmluaXRpb25zXFxDb21wb25lbnRWaWV3LnN0ZXBzLnRzeCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcRGVza3RvcFxcY250aFxcc3JjXFxwYWdlc1xcQm9pbGVycGxhdGVQYWdlc1xcX190ZXN0c19fXFxzdGVwLWRlZmluaXRpb25zXFxDb21wb25lbnRWaWV3LnN0ZXBzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrQ0FBMkQ7QUFFM0QsaUNBQWlDO0FBQ2pDLHNFQUEyQztBQUMzQyxxREFBMkQ7QUFFM0QsSUFBTSxPQUFPLEdBQUcsSUFBQSwyQkFBVyxFQUFDLHVFQUF1RSxDQUFDLENBQUM7QUFFckcsSUFBQSw2QkFBYSxFQUFDLE9BQU8sRUFBRSxVQUFBLElBQUk7SUFDekIsSUFBSSxPQUFZLENBQUM7SUFFakIsSUFBSSxDQUFDLGlDQUFpQyxFQUFFLFVBQUMsRUFBcUI7WUFBbkIsS0FBSyxXQUFBLEVBQUUsSUFBSSxVQUFBLEVBQUUsSUFBSSxVQUFBO1FBQzFELEtBQUssQ0FBQywwQkFBMEIsRUFBRTtZQUNoQyxPQUFPLEdBQUcsSUFBQSxnQkFBTyxFQUFDLHVCQUFDLHVCQUFRLElBQUMsVUFBVSxFQUFFLEVBQUUsR0FBSSxDQUFDLENBQUM7UUFDbEQsQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsb0JBQW9CLEVBQUU7Ozs7d0JBQ3pCLE9BQU8sQ0FBQyxRQUFRLENBQUM7NEJBQ2YsSUFBSSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUM7NEJBQzNELFlBQVksRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxDQUFDO3lCQUNwRSxDQUFDLENBQUM7d0JBQ0gsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxvQ0FBb0M7d0JBQzlFLHFCQUFNLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxFQUFBOzt3QkFBNUMsU0FBNEMsQ0FBQzt3QkFDN0MsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDOzs7O2FBQ2xCLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyw2QkFBNkIsRUFBRSxVQUFDLFVBQVU7WUFDNUMsT0FBTyxDQUFDLFFBQVEsRUFBZSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLDhCQUE4QjtZQUN6RixPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDbkIsQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsZ0RBQWdELEVBQUUsVUFBQyxVQUFVO1lBQ2hFLElBQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsd0JBQVcsQ0FBQyxDQUFDO1lBQy9DLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLFVBQUMsSUFBUyxJQUFLLE9BQUEsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssVUFBVSxFQUFyQyxDQUFxQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEcsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILElBQUksQ0FBQyxvQkFBb0IsRUFBRSxVQUFDLEVBQXFCO1lBQW5CLEtBQUssV0FBQSxFQUFFLElBQUksVUFBQSxFQUFFLElBQUksVUFBQTtRQUM3QyxLQUFLLENBQUMsMEJBQTBCLEVBQUU7WUFDaEMsT0FBTyxHQUFHLElBQUEsZ0JBQU8sRUFBQyx1QkFBQyx1QkFBUSxJQUFDLFVBQVUsRUFBRSxFQUFFLEdBQUksQ0FBQyxDQUFDO1FBQ2xELENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLHVDQUF1QyxFQUFFOzs7O3dCQUM1QyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsS0FBSyxFQUFFLHNCQUFzQixFQUFFLENBQUMsQ0FBQzt3QkFDcEQscUJBQU0sT0FBTyxDQUFDLE1BQU0sRUFBRSxFQUFBOzt3QkFBdEIsU0FBc0IsQ0FBQzs7OzthQUN4QixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsc0NBQXNDLEVBQUU7WUFDM0MsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxpQkFBSSxDQUFDLENBQUM7WUFDaEMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNqQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNsRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVGZWF0dXJlLCBsb2FkRmVhdHVyZSB9IGZyb20gJ2plc3QtY3VjdW1iZXInO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBzaGFsbG93IH0gZnJvbSAnZW56eW1lJztcclxuaW1wb3J0IEhvbWVQYWdlIGZyb20gJy4uLy4uL0NvbXBvbmVudFZpZXcnO1xyXG5pbXBvcnQgeyBOb3RlLCBQb2tlbW9uQ2FyZCB9IGZyb20gJy4uLy4uLy4uLy4uL2NvbXBvbmVudHMnO1xyXG5cclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKCcuL3NyYy9wYWdlcy9Cb2lsZXJwbGF0ZVBhZ2VzL19fdGVzdHNfXy9mZWF0dXJlcy9Db21wb25lbnRWaWV3LmZlYXR1cmUnKTtcclxuXHJcbmRlZmluZUZlYXR1cmUoZmVhdHVyZSwgdGVzdCA9PiB7XHJcbiAgbGV0IHdyYXBwZXI6IGFueTtcclxuXHJcbiAgdGVzdCgnRGlzcGxheSBkYXRhIGFuZCBzZWFyY2ggcmVzdWx0cycsICh7IGdpdmVuLCB3aGVuLCB0aGVuIH0pID0+IHtcclxuICAgIGdpdmVuKCd0aGUgSG9tZVBhZ2UgaXMgcmVuZGVyZWQnLCAoKSA9PiB7XHJcbiAgICAgIHdyYXBwZXIgPSBzaGFsbG93KDxIb21lUGFnZSBuYXZpZ2F0aW9uPXt7fX0gLz4pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgd2hlbigndGhlIGRhdGEgaXMgbG9hZGVkJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICB3cmFwcGVyLnNldFN0YXRlKHtcclxuICAgICAgICBkYXRhOiBbeyBuYW1lOiAncGlrYWNodScsIG9yZGVyOiAxLCB0eXBlczogW10sIGltYWdlOiAnJyB9XSxcclxuICAgICAgICBmaWx0ZXJlZERhdGE6IFt7IG5hbWU6ICdwaWthY2h1Jywgb3JkZXI6IDEsIHR5cGVzOiBbXSwgaW1hZ2U6ICcnIH1dXHJcbiAgICAgIH0pO1xyXG4gICAgICB3cmFwcGVyLmluc3RhbmNlKCkuZmV0Y2hEYXRhID0gamVzdC5mbigpOyAvLyBNb2NrIGZldGNoRGF0YSB0byBhdm9pZCBBUEkgY2FsbHNcclxuICAgICAgYXdhaXQgd3JhcHBlci5pbnN0YW5jZSgpLmNvbXBvbmVudERpZE1vdW50KCk7XHJcbiAgICAgIHdyYXBwZXIudXBkYXRlKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB3aGVuKCd0aGUgc2VhcmNoIHRlcm0gaXMge3N0cmluZ30nLCAoc2VhcmNoVGVybSkgPT4ge1xyXG4gICAgICAod3JhcHBlci5pbnN0YW5jZSgpIGFzIEhvbWVQYWdlKS5oYW5kbGVTZWFyY2goc2VhcmNoVGVybSk7IC8vIEV4cGxpY2l0bHkgY2FzdCB0byBIb21lUGFnZVxyXG4gICAgICB3cmFwcGVyLnVwZGF0ZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhlbigndGhlIGxpc3Qgc2hvdWxkIGRpc3BsYXkge3N0cmluZ30gcmVsYXRlZCBpdGVtcycsIChzZWFyY2hUZXJtKSA9PiB7XHJcbiAgICAgIGNvbnN0IHBva2Vtb25DYXJkcyA9IHdyYXBwZXIuZmluZChQb2tlbW9uQ2FyZCk7XHJcbiAgICAgIGV4cGVjdChwb2tlbW9uQ2FyZHMuc29tZVdoZXJlKChjYXJkOiBhbnkpID0+IGNhcmQucHJvcHMoKS5pdGVtLm5hbWUgPT09IHNlYXJjaFRlcm0pKS50b0JlKHRydWUpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIHRlc3QoJ0hhbmRsZSBlcnJvciBzdGF0ZScsICh7IGdpdmVuLCB3aGVuLCB0aGVuIH0pID0+IHtcclxuICAgIGdpdmVuKCd0aGUgSG9tZVBhZ2UgaXMgcmVuZGVyZWQnLCAoKSA9PiB7XHJcbiAgICAgIHdyYXBwZXIgPSBzaGFsbG93KDxIb21lUGFnZSBuYXZpZ2F0aW9uPXt7fX0gLz4pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgd2hlbigndGhlcmUgaXMgYW4gZXJyb3Igd2hpbGUgZmV0Y2hpbmcgZGF0YScsIGFzeW5jICgpID0+IHtcclxuICAgICAgd3JhcHBlci5zZXRTdGF0ZSh7IGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIGRhdGEnIH0pO1xyXG4gICAgICBhd2FpdCB3cmFwcGVyLnVwZGF0ZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhlbignYW4gZXJyb3IgbWVzc2FnZSBzaG91bGQgYmUgZGlzcGxheWVkJywgKCkgPT4ge1xyXG4gICAgICBjb25zdCBub3RlID0gd3JhcHBlci5maW5kKE5vdGUpO1xyXG4gICAgICBleHBlY3Qobm90ZS5leGlzdHMoKSkudG9CZSh0cnVlKTtcclxuICAgICAgZXhwZWN0KG5vdGUucHJvcHMoKS50ZXh0KS50b0JlKCdObyBkYXRhIGZvdW5kJyk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcbiJdfQ==