134087b1a47bc33730a01ceb3368eed2
"use strict";

exports.__esModule = true;
exports.default = void 0;
var _ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment");
var _Dimensions = _interopRequireDefault(require("../Dimensions"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var DeviceInfo = {
  Dimensions: {
    get windowPhysicalPixels() {
      var _Dimensions$get = _Dimensions.default.get('window'),
        width = _Dimensions$get.width,
        height = _Dimensions$get.height,
        fontScale = _Dimensions$get.fontScale,
        scale = _Dimensions$get.scale;
      return {
        width: width * scale,
        height: height * scale,
        scale: scale,
        fontScale: fontScale
      };
    },
    get screenPhysicalPixels() {
      var _Dimensions$get2 = _Dimensions.default.get('screen'),
        width = _Dimensions$get2.width,
        height = _Dimensions$get2.height,
        fontScale = _Dimensions$get2.fontScale,
        scale = _Dimensions$get2.scale;
      return {
        width: width * scale,
        height: height * scale,
        scale: scale,
        fontScale: fontScale
      };
    }
  },
  get locale() {
    if (_ExecutionEnvironment.canUseDOM) {
      if (navigator.languages) {
        return navigator.languages[0];
      } else {
        return navigator.language;
      }
    }
  },
  get totalMemory() {
    return _ExecutionEnvironment.canUseDOM ? navigator.deviceMemory : undefined;
  },
  get userAgent() {
    return _ExecutionEnvironment.canUseDOM ? navigator.userAgent : '';
  }
};
var _default = DeviceInfo;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfRXhlY3V0aW9uRW52aXJvbm1lbnQiLCJyZXF1aXJlIiwiX0RpbWVuc2lvbnMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiRGV2aWNlSW5mbyIsIkRpbWVuc2lvbnMiLCJ3aW5kb3dQaHlzaWNhbFBpeGVscyIsIl9EaW1lbnNpb25zJGdldCIsImdldCIsIndpZHRoIiwiaGVpZ2h0IiwiZm9udFNjYWxlIiwic2NhbGUiLCJzY3JlZW5QaHlzaWNhbFBpeGVscyIsIl9EaW1lbnNpb25zJGdldDIiLCJsb2NhbGUiLCJjYW5Vc2VET00iLCJuYXZpZ2F0b3IiLCJsYW5ndWFnZXMiLCJsYW5ndWFnZSIsInRvdGFsTWVtb3J5IiwiZGV2aWNlTWVtb3J5IiwidW5kZWZpbmVkIiwidXNlckFnZW50IiwiX2RlZmF1bHQiLCJtb2R1bGUiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9FeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudFwiKTtcblxudmFyIF9EaW1lbnNpb25zID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vRGltZW5zaW9uc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSBOaWNvbGFzIEdhbGxhZ2hlci5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xudmFyIERldmljZUluZm8gPSB7XG4gIERpbWVuc2lvbnM6IHtcbiAgICBnZXQgd2luZG93UGh5c2ljYWxQaXhlbHMoKSB7XG4gICAgICB2YXIgX0RpbWVuc2lvbnMkZ2V0ID0gX0RpbWVuc2lvbnMuZGVmYXVsdC5nZXQoJ3dpbmRvdycpLFxuICAgICAgICAgIHdpZHRoID0gX0RpbWVuc2lvbnMkZ2V0LndpZHRoLFxuICAgICAgICAgIGhlaWdodCA9IF9EaW1lbnNpb25zJGdldC5oZWlnaHQsXG4gICAgICAgICAgZm9udFNjYWxlID0gX0RpbWVuc2lvbnMkZ2V0LmZvbnRTY2FsZSxcbiAgICAgICAgICBzY2FsZSA9IF9EaW1lbnNpb25zJGdldC5zY2FsZTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IHdpZHRoICogc2NhbGUsXG4gICAgICAgIGhlaWdodDogaGVpZ2h0ICogc2NhbGUsXG4gICAgICAgIHNjYWxlOiBzY2FsZSxcbiAgICAgICAgZm9udFNjYWxlOiBmb250U2NhbGVcbiAgICAgIH07XG4gICAgfSxcblxuICAgIGdldCBzY3JlZW5QaHlzaWNhbFBpeGVscygpIHtcbiAgICAgIHZhciBfRGltZW5zaW9ucyRnZXQyID0gX0RpbWVuc2lvbnMuZGVmYXVsdC5nZXQoJ3NjcmVlbicpLFxuICAgICAgICAgIHdpZHRoID0gX0RpbWVuc2lvbnMkZ2V0Mi53aWR0aCxcbiAgICAgICAgICBoZWlnaHQgPSBfRGltZW5zaW9ucyRnZXQyLmhlaWdodCxcbiAgICAgICAgICBmb250U2NhbGUgPSBfRGltZW5zaW9ucyRnZXQyLmZvbnRTY2FsZSxcbiAgICAgICAgICBzY2FsZSA9IF9EaW1lbnNpb25zJGdldDIuc2NhbGU7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiB3aWR0aCAqIHNjYWxlLFxuICAgICAgICBoZWlnaHQ6IGhlaWdodCAqIHNjYWxlLFxuICAgICAgICBzY2FsZTogc2NhbGUsXG4gICAgICAgIGZvbnRTY2FsZTogZm9udFNjYWxlXG4gICAgICB9O1xuICAgIH1cblxuICB9LFxuXG4gIGdldCBsb2NhbGUoKSB7XG4gICAgaWYgKF9FeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00pIHtcbiAgICAgIGlmIChuYXZpZ2F0b3IubGFuZ3VhZ2VzKSB7XG4gICAgICAgIHJldHVybiBuYXZpZ2F0b3IubGFuZ3VhZ2VzWzBdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5sYW5ndWFnZTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgZ2V0IHRvdGFsTWVtb3J5KCkge1xuICAgIC8vICRGbG93SXNzdWUgZGV2aWNlTWVtb3J5IG5vdCBkZWZpbmVkIGluIG5hdmlnYXRvclxuICAgIHJldHVybiBfRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NID8gbmF2aWdhdG9yLmRldmljZU1lbW9yeSA6IHVuZGVmaW5lZDtcbiAgfSxcblxuICBnZXQgdXNlckFnZW50KCkge1xuICAgIHJldHVybiBfRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NID8gbmF2aWdhdG9yLnVzZXJBZ2VudCA6ICcnO1xuICB9XG5cbn07XG52YXIgX2RlZmF1bHQgPSBEZXZpY2VJbmZvO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVpBLE9BQU8sQ0FBQ0MsVUFBVSxHQUFHLElBQUk7QUFDekJELE9BQU8sQ0FBQ0UsT0FBTyxHQUFHLEtBQUssQ0FBQztBQUV4QixJQUFJQyxxQkFBcUIsR0FBR0MsT0FBTyxDQUFDLCtCQUErQixDQUFDO0FBRXBFLElBQUlDLFdBQVcsR0FBR0Msc0JBQXNCLENBQUNGLE9BQU8sZ0JBQWdCLENBQUMsQ0FBQztBQUVsRSxTQUFTRSxzQkFBc0JBLENBQUNDLEdBQUcsRUFBRTtFQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDTixVQUFVLEdBQUdNLEdBQUcsR0FBRztJQUFFTCxPQUFPLEVBQUVLO0VBQUksQ0FBQztBQUFFO0FBVTlGLElBQUlDLFVBQVUsR0FBRztFQUNmQyxVQUFVLEVBQUU7SUFDVixJQUFJQyxvQkFBb0JBLENBQUEsRUFBRztNQUN6QixJQUFJQyxlQUFlLEdBQUdOLFdBQVcsQ0FBQ0gsT0FBTyxDQUFDVSxHQUFHLENBQUMsUUFBUSxDQUFDO1FBQ25EQyxLQUFLLEdBQUdGLGVBQWUsQ0FBQ0UsS0FBSztRQUM3QkMsTUFBTSxHQUFHSCxlQUFlLENBQUNHLE1BQU07UUFDL0JDLFNBQVMsR0FBR0osZUFBZSxDQUFDSSxTQUFTO1FBQ3JDQyxLQUFLLEdBQUdMLGVBQWUsQ0FBQ0ssS0FBSztNQUVqQyxPQUFPO1FBQ0xILEtBQUssRUFBRUEsS0FBSyxHQUFHRyxLQUFLO1FBQ3BCRixNQUFNLEVBQUVBLE1BQU0sR0FBR0UsS0FBSztRQUN0QkEsS0FBSyxFQUFFQSxLQUFLO1FBQ1pELFNBQVMsRUFBRUE7TUFDYixDQUFDO0lBQ0gsQ0FBQztJQUVELElBQUlFLG9CQUFvQkEsQ0FBQSxFQUFHO01BQ3pCLElBQUlDLGdCQUFnQixHQUFHYixXQUFXLENBQUNILE9BQU8sQ0FBQ1UsR0FBRyxDQUFDLFFBQVEsQ0FBQztRQUNwREMsS0FBSyxHQUFHSyxnQkFBZ0IsQ0FBQ0wsS0FBSztRQUM5QkMsTUFBTSxHQUFHSSxnQkFBZ0IsQ0FBQ0osTUFBTTtRQUNoQ0MsU0FBUyxHQUFHRyxnQkFBZ0IsQ0FBQ0gsU0FBUztRQUN0Q0MsS0FBSyxHQUFHRSxnQkFBZ0IsQ0FBQ0YsS0FBSztNQUVsQyxPQUFPO1FBQ0xILEtBQUssRUFBRUEsS0FBSyxHQUFHRyxLQUFLO1FBQ3BCRixNQUFNLEVBQUVBLE1BQU0sR0FBR0UsS0FBSztRQUN0QkEsS0FBSyxFQUFFQSxLQUFLO1FBQ1pELFNBQVMsRUFBRUE7TUFDYixDQUFDO0lBQ0g7RUFFRixDQUFDO0VBRUQsSUFBSUksTUFBTUEsQ0FBQSxFQUFHO0lBQ1gsSUFBSWhCLHFCQUFxQixDQUFDaUIsU0FBUyxFQUFFO01BQ25DLElBQUlDLFNBQVMsQ0FBQ0MsU0FBUyxFQUFFO1FBQ3ZCLE9BQU9ELFNBQVMsQ0FBQ0MsU0FBUyxDQUFDLENBQUMsQ0FBQztNQUMvQixDQUFDLE1BQU07UUFDTCxPQUFPRCxTQUFTLENBQUNFLFFBQVE7TUFDM0I7SUFDRjtFQUNGLENBQUM7RUFFRCxJQUFJQyxXQUFXQSxDQUFBLEVBQUc7SUFFaEIsT0FBT3JCLHFCQUFxQixDQUFDaUIsU0FBUyxHQUFHQyxTQUFTLENBQUNJLFlBQVksR0FBR0MsU0FBUztFQUM3RSxDQUFDO0VBRUQsSUFBSUMsU0FBU0EsQ0FBQSxFQUFHO0lBQ2QsT0FBT3hCLHFCQUFxQixDQUFDaUIsU0FBUyxHQUFHQyxTQUFTLENBQUNNLFNBQVMsR0FBRyxFQUFFO0VBQ25FO0FBRUYsQ0FBQztBQUNELElBQUlDLFFBQVEsR0FBR3BCLFVBQVU7QUFDekJSLE9BQU8sQ0FBQ0UsT0FBTyxHQUFHMEIsUUFBUTtBQUMxQkMsTUFBTSxDQUFDN0IsT0FBTyxHQUFHQSxPQUFPLENBQUNFLE9BQU8iLCJpZ25vcmVMaXN0IjpbXX0=