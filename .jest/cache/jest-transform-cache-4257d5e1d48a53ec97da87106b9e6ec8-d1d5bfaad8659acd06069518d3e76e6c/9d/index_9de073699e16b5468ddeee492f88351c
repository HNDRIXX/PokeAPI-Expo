198a9b5aaf50c072dc6da449974b15c4
'use strict';

exports.__esModule = true;
exports.default = void 0;
var _InteractionManager = _interopRequireDefault(require("../../../exports/InteractionManager"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var Batchinator = function () {
  function Batchinator(callback, delayMS) {
    this._delay = delayMS;
    this._callback = callback;
  }
  var _proto = Batchinator.prototype;
  _proto.dispose = function dispose(options) {
    if (options === void 0) {
      options = {
        abort: false
      };
    }
    if (this._taskHandle) {
      this._taskHandle.cancel();
      if (!options.abort) {
        this._callback();
      }
      this._taskHandle = null;
    }
  };
  _proto.schedule = function schedule() {
    var _this = this;
    if (this._taskHandle) {
      return;
    }
    var timeoutHandle = setTimeout(function () {
      _this._taskHandle = _InteractionManager.default.runAfterInteractions(function () {
        _this._taskHandle = null;
        _this._callback();
      });
    }, this._delay);
    this._taskHandle = {
      cancel: function cancel() {
        return clearTimeout(timeoutHandle);
      }
    };
  };
  return Batchinator;
}();
var _default = Batchinator;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfSW50ZXJhY3Rpb25NYW5hZ2VyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJCYXRjaGluYXRvciIsImNhbGxiYWNrIiwiZGVsYXlNUyIsIl9kZWxheSIsIl9jYWxsYmFjayIsIl9wcm90byIsInByb3RvdHlwZSIsImRpc3Bvc2UiLCJvcHRpb25zIiwiYWJvcnQiLCJfdGFza0hhbmRsZSIsImNhbmNlbCIsInNjaGVkdWxlIiwiX3RoaXMiLCJ0aW1lb3V0SGFuZGxlIiwic2V0VGltZW91dCIsInJ1bkFmdGVySW50ZXJhY3Rpb25zIiwiY2xlYXJUaW1lb3V0IiwiX2RlZmF1bHQiLCJtb2R1bGUiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICovXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfSW50ZXJhY3Rpb25NYW5hZ2VyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vLi4vZXhwb3J0cy9JbnRlcmFjdGlvbk1hbmFnZXJcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIEEgc2ltcGxlIGNsYXNzIGZvciBiYXRjaGluZyB1cCBpbnZvY2F0aW9ucyBvZiBhIGxvdy1wcmkgY2FsbGJhY2suIEEgdGltZW91dCBpcyBzZXQgdG8gcnVuIHRoZVxuICogY2FsbGJhY2sgb25jZSBhZnRlciBhIGRlbGF5LCBubyBtYXR0ZXIgaG93IG1hbnkgdGltZXMgaXQncyBzY2hlZHVsZWQuIE9uY2UgdGhlIGRlbGF5IGlzIHJlYWNoZWQsXG4gKiBJbnRlcmFjdGlvbk1hbmFnZXIucnVuQWZ0ZXJJbnRlcmFjdGlvbnMgaXMgdXNlZCB0byBpbnZva2UgdGhlIGNhbGxiYWNrIGFmdGVyIGFueSBoaS1wcmlcbiAqIGludGVyYWN0aW9ucyBhcmUgZG9uZSBydW5uaW5nLlxuICpcbiAqIE1ha2Ugc3VyZSB0byBjbGVhbnVwIHdpdGggZGlzcG9zZSgpLiAgRXhhbXBsZTpcbiAqXG4gKiAgIGNsYXNzIFdpZGdldCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gKiAgICAgX2JhdGNoZWRTYXZlOiBuZXcgQmF0Y2hpbmF0b3IoKCkgPT4gdGhpcy5fc2F2ZVN0YXRlLCAxMDAwKTtcbiAqICAgICBfc2F2ZVNhdGUoKSB7XG4gKiAgICAgICAvLyBzYXZlIHRoaXMuc3RhdGUgdG8gZGlza1xuICogICAgIH1cbiAqICAgICBjb21wb25lbnREaWRVcGRhdGUoKSB7XG4gKiAgICAgICB0aGlzLl9iYXRjaGVkU2F2ZS5zY2hlZHVsZSgpO1xuICogICAgIH1cbiAqICAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAqICAgICAgIHRoaXMuX2JhdGNoZWRTYXZlLmRpc3Bvc2UoKTtcbiAqICAgICB9XG4gKiAgICAgLi4uXG4gKiAgIH1cbiAqL1xudmFyIEJhdGNoaW5hdG9yID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQmF0Y2hpbmF0b3IoY2FsbGJhY2ssIGRlbGF5TVMpIHtcbiAgICB0aGlzLl9kZWxheSA9IGRlbGF5TVM7XG4gICAgdGhpcy5fY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgfVxuICAvKlxuICAgKiBDbGVhbnVwIGFueSBwZW5kaW5nIHRhc2tzLlxuICAgKlxuICAgKiBCeSBkZWZhdWx0LCBpZiB0aGVyZSBpcyBhIHBlbmRpbmcgdGFzayB0aGUgY2FsbGJhY2sgaXMgcnVuIGltbWVkaWF0ZWx5LiBTZXQgdGhlIG9wdGlvbiBhYm9ydCB0b1xuICAgKiB0cnVlIHRvIG5vdCBjYWxsIHRoZSBjYWxsYmFjayBpZiBpdCB3YXMgcGVuZGluZy5cbiAgICovXG5cblxuICB2YXIgX3Byb3RvID0gQmF0Y2hpbmF0b3IucHJvdG90eXBlO1xuXG4gIF9wcm90by5kaXNwb3NlID0gZnVuY3Rpb24gZGlzcG9zZShvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgICAgb3B0aW9ucyA9IHtcbiAgICAgICAgYWJvcnQ6IGZhbHNlXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmICh0aGlzLl90YXNrSGFuZGxlKSB7XG4gICAgICB0aGlzLl90YXNrSGFuZGxlLmNhbmNlbCgpO1xuXG4gICAgICBpZiAoIW9wdGlvbnMuYWJvcnQpIHtcbiAgICAgICAgdGhpcy5fY2FsbGJhY2soKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fdGFza0hhbmRsZSA9IG51bGw7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5zY2hlZHVsZSA9IGZ1bmN0aW9uIHNjaGVkdWxlKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBpZiAodGhpcy5fdGFza0hhbmRsZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciB0aW1lb3V0SGFuZGxlID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy5fdGFza0hhbmRsZSA9IF9JbnRlcmFjdGlvbk1hbmFnZXIuZGVmYXVsdC5ydW5BZnRlckludGVyYWN0aW9ucyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIE5vdGUgdGhhdCB3ZSBjbGVhciB0aGUgaGFuZGxlIGJlZm9yZSBpbnZva2luZyB0aGUgY2FsbGJhY2sgc28gdGhhdCBpZiB0aGUgY2FsbGJhY2sgY2FsbHNcbiAgICAgICAgLy8gc2NoZWR1bGUgYWdhaW4sIGl0IHdpbGwgYWN0dWFsbHkgc2NoZWR1bGUgYW5vdGhlciB0YXNrLlxuICAgICAgICBfdGhpcy5fdGFza0hhbmRsZSA9IG51bGw7XG5cbiAgICAgICAgX3RoaXMuX2NhbGxiYWNrKCk7XG4gICAgICB9KTtcbiAgICB9LCB0aGlzLl9kZWxheSk7XG4gICAgdGhpcy5fdGFza0hhbmRsZSA9IHtcbiAgICAgIGNhbmNlbDogZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KHRpbWVvdXRIYW5kbGUpO1xuICAgICAgfVxuICAgIH07XG4gIH07XG5cbiAgcmV0dXJuIEJhdGNoaW5hdG9yO1xufSgpO1xuXG52YXIgX2RlZmF1bHQgPSBCYXRjaGluYXRvcjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il0sIm1hcHBpbmdzIjoiQUFTQSxZQUFZOztBQUVaQSxPQUFPLENBQUNDLFVBQVUsR0FBRyxJQUFJO0FBQ3pCRCxPQUFPLENBQUNFLE9BQU8sR0FBRyxLQUFLLENBQUM7QUFFeEIsSUFBSUMsbUJBQW1CLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLHNDQUFzQyxDQUFDLENBQUM7QUFFaEcsU0FBU0Qsc0JBQXNCQSxDQUFDRSxHQUFHLEVBQUU7RUFBRSxPQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0wsVUFBVSxHQUFHSyxHQUFHLEdBQUc7SUFBRUosT0FBTyxFQUFFSTtFQUFJLENBQUM7QUFBRTtBQXdCOUYsSUFBSUMsV0FBVyxHQUFnQixZQUFZO0VBQ3pDLFNBQVNBLFdBQVdBLENBQUNDLFFBQVEsRUFBRUMsT0FBTyxFQUFFO0lBQ3RDLElBQUksQ0FBQ0MsTUFBTSxHQUFHRCxPQUFPO0lBQ3JCLElBQUksQ0FBQ0UsU0FBUyxHQUFHSCxRQUFRO0VBQzNCO0VBU0EsSUFBSUksTUFBTSxHQUFHTCxXQUFXLENBQUNNLFNBQVM7RUFFbENELE1BQU0sQ0FBQ0UsT0FBTyxHQUFHLFNBQVNBLE9BQU9BLENBQUNDLE9BQU8sRUFBRTtJQUN6QyxJQUFJQSxPQUFPLEtBQUssS0FBSyxDQUFDLEVBQUU7TUFDdEJBLE9BQU8sR0FBRztRQUNSQyxLQUFLLEVBQUU7TUFDVCxDQUFDO0lBQ0g7SUFFQSxJQUFJLElBQUksQ0FBQ0MsV0FBVyxFQUFFO01BQ3BCLElBQUksQ0FBQ0EsV0FBVyxDQUFDQyxNQUFNLENBQUMsQ0FBQztNQUV6QixJQUFJLENBQUNILE9BQU8sQ0FBQ0MsS0FBSyxFQUFFO1FBQ2xCLElBQUksQ0FBQ0wsU0FBUyxDQUFDLENBQUM7TUFDbEI7TUFFQSxJQUFJLENBQUNNLFdBQVcsR0FBRyxJQUFJO0lBQ3pCO0VBQ0YsQ0FBQztFQUVETCxNQUFNLENBQUNPLFFBQVEsR0FBRyxTQUFTQSxRQUFRQSxDQUFBLEVBQUc7SUFDcEMsSUFBSUMsS0FBSyxHQUFHLElBQUk7SUFFaEIsSUFBSSxJQUFJLENBQUNILFdBQVcsRUFBRTtNQUNwQjtJQUNGO0lBRUEsSUFBSUksYUFBYSxHQUFHQyxVQUFVLENBQUMsWUFBWTtNQUN6Q0YsS0FBSyxDQUFDSCxXQUFXLEdBQUdkLG1CQUFtQixDQUFDRCxPQUFPLENBQUNxQixvQkFBb0IsQ0FBQyxZQUFZO1FBRy9FSCxLQUFLLENBQUNILFdBQVcsR0FBRyxJQUFJO1FBRXhCRyxLQUFLLENBQUNULFNBQVMsQ0FBQyxDQUFDO01BQ25CLENBQUMsQ0FBQztJQUNKLENBQUMsRUFBRSxJQUFJLENBQUNELE1BQU0sQ0FBQztJQUNmLElBQUksQ0FBQ08sV0FBVyxHQUFHO01BQ2pCQyxNQUFNLEVBQUUsU0FBU0EsTUFBTUEsQ0FBQSxFQUFHO1FBQ3hCLE9BQU9NLFlBQVksQ0FBQ0gsYUFBYSxDQUFDO01BQ3BDO0lBQ0YsQ0FBQztFQUNILENBQUM7RUFFRCxPQUFPZCxXQUFXO0FBQ3BCLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSWtCLFFBQVEsR0FBR2xCLFdBQVc7QUFDMUJQLE9BQU8sQ0FBQ0UsT0FBTyxHQUFHdUIsUUFBUTtBQUMxQkMsTUFBTSxDQUFDMUIsT0FBTyxHQUFHQSxPQUFPLENBQUNFLE9BQU8iLCJpZ25vcmVMaXN0IjpbXX0=